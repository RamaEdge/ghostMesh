test_content = """""\nEnd-to-end integration test scaffold for THE-65.\n\nThis script is a lightweight tester that orchestrates starting services, simulating a data flow, and performing basic sanity checks on the end-to-end telemetry path. It currently serves as a placeholder to be extended during the hackathon.\n"""\nimport subprocess\nimport time\nimport sys\n\ndef run(cmd: str) -> int:\n    print(f"$ {cmd}")\n    return subprocess.call(cmd, shell=True)\n\n\ndef main():\n    print("=== THE-65 End-to-End Integration Test Scaffold ===")\n    print("Starting all GhostMesh services via Makefile...")\n    rc = run("make start")\n    if rc != 0:\n        print("[ERROR] Failed to start services.")\n        sys.exit(1)\n    print("Waiting for services to stabilize...")\n    time.sleep(5)\n    print("[placeholder] Verifying end-to-end data flow would occur here (Telemetry -> Gateway -> MQTT -> Detector -> Alerts -> UI).")\n    print("[placeholder] Verifying topic schemas and message formats would occur here.")\n    print("If all checks pass, exit 0. Otherwise exit with non-zero code.")\n    sys.exit(0)\n\n\nif __name__ == '__main__':\n    main()\n";

with open("tests/the65/e2e_test.py","w") as f: f.write(test_content)
print("WROTE")
