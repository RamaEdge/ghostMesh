# GhostMesh Production Compose Override
# Production-specific configurations for deployment
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  # Production: Remove mock OPC UA server
  mock-opcua:
    profiles:
      - development  # Only run in development profile

  # Production: Secure MQTT configuration
  mosquitto:
    ports:
      - "1883:1883"  # Only MQTT port, no WebSocket
    environment:
      - MOSQUITTO_USERNAME=mosquitto
      - DEBUG=false
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwd:/mosquitto/config/passwd
      - ./mosquitto/acl.conf:/mosquitto/config/acl.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production: Optimized OPC UA gateway
  opcua2mqtt:
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=gateway
      - MQTT_PASSWORD=gatewaypass
      - DEBUG=false
      - LOG_LEVEL=INFO
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Production: Optimized anomaly detector
  anomaly:
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=iot
      - MQTT_PASSWORD=iotpass
      - MQTT_QOS=1
      - DEBUG=false
      - LOG_LEVEL=INFO
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Production: Optimized policy engine
  policy:
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=iot
      - MQTT_PASSWORD=iotpass
      - MQTT_QOS=1
      - DEBUG=false
      - LOG_LEVEL=INFO
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Production: Optimized explainer service
  explainer:
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=explainer
      - MQTT_PASSWORD=explainerpass
      - MQTT_QOS=1
      - LLM_SERVER_URL=http://llm-server:8080
      - DEFAULT_USER_TYPE=hybrid
      - EXPLANATION_TIMEOUT=10
      - DEBUG=false
      - LOG_LEVEL=INFO
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Production: Optimized LLM server
  llm-server:
    environment:
      - MODEL_PATH=/models/tinyllama-1.1b-chat.gguf
      - DEBUG=false
      - LOG_LEVEL=INFO
    ports:
      - "8080:8080"  # Only production port
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Production: Optimized dashboard
  dashboard:
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - MQTT_USERNAME=dashboard
      - MQTT_PASSWORD=dashboard123
      - DEBUG=false
      - LOG_LEVEL=INFO
    ports:
      - "8501:8501"  # Only production port
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Production: Optimized MQTT API backend
  mqtt-api:
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=api
      - MQTT_PASSWORD=api_password
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_RELOAD=false
      - LOG_LEVEL=INFO
      - DEBUG=false
      - CORS_ORIGINS=https://ghostmesh.dev,https://dashboard.ghostmesh.dev
      - API_KEY_REQUIRED=true
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=1000
      - RATE_LIMIT_WINDOW=60
      - MAX_HISTORY_SIZE=5000
      - MESSAGE_RETENTION_HOURS=168  # 7 days
      - WS_MAX_CONNECTIONS=500
    ports:
      - "8000:8000"  # Only production port
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Production: Add monitoring service
  monitoring:
    image: prom/prometheus:latest
    container_name: ghostmesh-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
    networks:
      - ghostmesh-network

volumes:
  prometheus_data:
    driver: local
